{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf250
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red191\green0\blue0;
\red96\green96\blue96;\red0\green115\blue0;\red0\green115\blue0;}
\deftab560
\pard\pardeftab560\ql\qnatural

\f0\fs18 \cf2 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\ql\qnatural\pardirnatural
\cf2 \
\{\
\cf3 var\cf2  window, swingslider, cyNoise, masterButton, loopButton, mousebase, numberBox, nativeSlider, sliderRate;\
\
\cf3 var\cf2  prepare, perform, buffer, defName, synth;\
\
\cf4 // Prepare Buffer and SynthDef\cf2 \
\
\pard\pardeftab560\ql\qnatural
\cf2 prepare = \{\
	\
	\cf3 var\cf2  def;\
	\
	buffer = \cf3 Buffer\cf2 .read(\cf3 Server\cf2 .default, \cf5 "./sounds/Ultrabeat.aif"\cf2 ); \cf4 // remember to free the buffer later.\cf2 \
	\
	def = \cf3 SynthDef\cf2 (\cf6 \\ultradrums\cf2 , \{ \cf3 | out = 0, bufnum = 0, loop = 1, rate = 1 |\cf2 	\
		\cf3 Out\cf2 .ar(out, \
			\cf3 PlayBuf\cf2 .ar(1, bufnum, \cf3 BufRateScale\cf2 .kr(bufnum) * rate, loop: loop, doneAction: 2)\
		)\
	\});\
	def.send(\cf3 Server\cf2 .default);\
	defName = def.name;\
\};\
\
prepare.value;\
\
\cf4 // Start Synth\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\ql\qnatural\pardirnatural
\cf2 \
\
\pard\pardeftab560\ql\qnatural
\cf3 JFreqScope\cf2 .new(400, 200, 0);\
\
window = \cf3 JSCWindow\cf2 ( \cf5 "CyNoise V 1.0"\cf2 , \cf3 Rect\cf2 ( 250, 260, 240, 260 ));\
swingslider = \cf3 JSCSlider\cf2 ( window, \cf3 Rect\cf2 ( 200, 100, 30, 150 ))\
	.action_(\{ \cf3 | me |\cf2 \
		\cf3 var\cf2  therealvalue;\
		therealvalue =  me.value - 0.5 * 5;\
		\cf4 // n.value_(therealvalue);\cf2 \
		\
		synth.set(\cf6 \\rate\cf2 , therealvalue);\
		\
	\});\
\
		\
\
masterButton = \cf3 JSCButton\cf2 ( window, \cf3 Rect\cf2 ( 20, 20, 200, 30 ));\
\
loopButton = \cf3 JSCButton\cf2 ( window, \cf3 Rect\cf2 ( 20, 60, 200, 30 ));\
\
loopButton.states = [ \cf4 //	States of loopButton\cf2 \
	[ \cf5 "Start Buffer"\cf2 , \cf3 Color\cf2 .black], \cf4 // first state\cf2 \
	[ \cf5 "Stop Buffer"\cf2 , \cf3 Color\cf2 .white, \cf3 Color\cf2 .black ],	\cf4 //second state\cf2 \
];\
\
\
loopButton.action = \{ \cf3 | me |\cf2 \
\
	if ( me.value == 1 ) \{\
		\
		synth = \cf3 Synth\cf2 (defName, [\cf6 \\bufnum\cf2 , buffer], \cf3 Server\cf2 .default);\
	\}\{ \
		swingslider.value = 0.5;	\
		synth.free;\
	\};\
	\
\};\
\
\
masterButton.states = [    \cf4 // States of masterButton\cf2 \
	[ \cf5 "Start CyNoise"\cf2 , \cf3 Color\cf2 .black], \cf4 // first state\cf2 \
	[ \cf5 "Stop CyNoise"\cf2 , \cf3 Color\cf2 .white, \cf3 Color\cf2 .black ],  \cf4 // second state\cf2 \
];\
                   \
masterButton.action = \{ \cf3 | me |\cf2  \
	if ( me.value == 1 ) \{\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\ql\qnatural\pardirnatural
\cf2 			\
\pard\pardeftab560\ql\qnatural
\cf2 		mousebase = \cf3 JMouseBase\cf2 .makeGUI;			\cf4 // make gui\cf2 \
									\
		\cf5 "CyNoise GUI Started.."\cf2 .postln;	\cf4 // post message so we know where we are ...\cf2 \
		\
		\cf4 // ------- here make the sound ... -------\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\ql\qnatural\pardirnatural
\cf2 		\
		cyNoise = \{ \cf3 var\cf2  cyDepth, cyRate, cyFreq, cyFilter;\
\
		\
			cyDepth = \cf3 JMouseY\cf2 .kr(100, 10000, 1);\
			cyRate = \cf3 JMouseX\cf2 .kr(4, 60, 1);\
\
			cyFreq = \cf3 LFSaw\cf2 .kr(cyRate, 5, cyDepth, cyDepth * 1.5);\
			cyFilter = \cf3 RLPF\cf2 .ar(\cf3 WhiteNoise\cf2 .ar([0.5,0.5]), cyFreq, 0.1);\
			\cf3 CombN\cf2 .ar(cyFilter, 0.5, 0.5, 2, 1, cyFilter)\
	\
		\}.play\
	\}\{\
		cyNoise.free;\
		mousebase.close; \
		\cf5 "Cynoise stopped..."\cf2 .postln \
	\};\
\};\
\pard\pardeftab560\ql\qnatural
\cf2 		\
window.front;\
\}.value\
)\
\
\cf4 // OSC Responder\cf2 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 (\
r = \cf3 OSCresponder\cf2 (\cf3 nil\cf2 , \cf6 '/tuio/2Dcur'\cf2 , \
\
	\{ \cf3 | time, resp, msg |\cf2 \
		\
		\
		msg[3].postln;\
		\cf5 "this is fourth element"\cf2 .postln;\
		\
		\
		\
	\}\
	\
);\
\
)\
\
r.add;\
\pard\pardeftab560\ql\qnatural
\cf0 // r.set(\cf7 \\rate\cf0 , therealvalue);\
\cf2 r.remove;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 \
\cf3 thisProcess\cf2 .recvOSCfunc = \{ \cf3 | ... args |\cf2  args.postln; \}\
\
\cf3 thisProcess\cf2 .recvOSCfunc = \cf3 nil\cf2 \
\pard\pardeftab560\ql\qnatural
\cf2 \
\
\
\
\
\
\
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab560\ql\qnatural\pardirnatural
\cf4 /// ========			\cf2 \
\pard\pardeftab560\ql\qnatural
\cf4 /*\
if ( ) \{ \} \{ \}\
*/}