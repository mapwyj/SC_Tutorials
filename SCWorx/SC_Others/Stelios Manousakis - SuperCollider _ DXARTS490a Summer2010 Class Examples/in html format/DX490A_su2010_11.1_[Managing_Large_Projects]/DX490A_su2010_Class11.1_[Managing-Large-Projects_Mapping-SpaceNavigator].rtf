{\rtf1\ansi\ansicpg1253\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fswiss\fcharset0 Optima-Regular;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;\red96\green96\blue96;}
\deftab560
\pard\pardeftab560\sa20\ql\qnatural

\f0\b\fs28 \cf2 /* 
\b0 \

\b\fs24 ==========================================================
\b0 \

\b\fs34 DX490a - Summer 2010
\b0 \

\fs26 		Instructor: Stelios Manousakis\

\b\fs24 ==========================================================
\b0\fs26 		
\fs24 \

\b\fs30 Class 11.1:
\b0 \

\b 	Managing large projects
\b0 \

\fs28 		Contents:\
			\'95 Supplement: Interface mapping\

\b\fs24 ==========================================================
\b0 \

\b\fs28 */
\fs30 \cf3 	
\b0\fs28 \
\pard\pardeftab560\ql\qnatural
\cf3 \
\
\cf2 // This file is the 
\b mapping
\b0  part of the instrument.\cf3 \
\cf2 // The control interface for this example is the 
\i \cf2 3DConnexxion SpaceNavigator
\i0 \cf2 , but with the appropriate changes on this file (and only this file), it can work with any other interface.\cf3 \
\
\cf2 // This file will be a function, as we need to be able to pass it the position of the device in the deviceList array\cf3 \
\
\
\{\
\cf4 arg\cf3  connection;	\
\cf4 var\cf3  device;\
\
\pard\pardeftab560\sa20\ql\qnatural
\cf2 // === \'95 Interfacing connections: ===\cf3 \
\
\pard\pardeftab560\ql\qnatural
\cf2 // hook up the device:\cf3 \
device = \cf4 GeneralHID\cf3 .open(connection); \
\pard\pardeftab560\sa20\ql\qnatural
\cf2 // start the eventloop \cf3 \
\cf4 GeneralHID\cf3 .startEventLoop;\
\
\
\pard\pardeftab560\ql\qnatural
\cf2 /// === \'95 Mapping stuff ===\cf3 \
\
\cf2 // create as many control buses as the parameters of the controlling interface\cf3 \
~ctrl = 6.collect(\{\cf4 CtkControl\cf3 .play\});\
\
\cf2 // create some envelopes to handle the parameter mapping as you wish\cf3 \
~panEnv = \cf4 Env\cf3 ([-1, 1], [1], \cf5 \\lin\cf3 );\
~ampEnv = \cf4 Env\cf3 ([0.001, 0.7], [1], 3);\
~modEnv = \cf4 Env\cf3 ([1, 50], [1], 2);\
~freqEnv = \cf4 Env\cf3 ([40, 3000], [1], 4);\
\cf2 //~cutEnv = Env([50, 8000], [1], 2);\cf3 \
~delEnv = \cf4 Env\cf3 ([0, 0.5], [1], 2);\
~harmEnv = \cf4 Env\cf3 ([0.1, 10], [1], 2);\
\
\cf2 // Name the device's controls:\cf3 \
device.add(\cf5 \\leftBtn\cf3 , [1, 1]);\
device.add(\cf5 \\rightBtn\cf3 , [1, 2]);\
device.add(\cf5 \\r_l_pan\cf3 , [3, 48]);\
device.add(\cf5 \\u_d_pan\cf3 , [3, 49]);\
device.add(\cf5 \\push_pull\cf3 , [3, 50]);\
device.add(\cf5 \\tilt\cf3 , [3, 51]);\
device.add(\cf5 \\spin\cf3 , [3, 52]);\
device.add(\cf5 \\roll\cf3 , [3, 53]);\
\
\cf2 // within each slot's action: fill the appropriate CtkControl bus with the values coming in from the device slot:\cf3 \
device[\cf5 \\r_l_pan\cf3 ].action_(\{\cf4 |val|\cf3  ~ctrl[0].set([~panEnv[val.value]])\});\
device[\cf5 \\u_d_pan\cf3 ].action_(\{\cf4 |val|\cf3  ~ctrl[1].set([~modEnv[val.value]])\});\
device[\cf5 \\push_pull\cf3 ].action_(\{\cf4 |val|\cf3  ~ctrl[2].set([~ampEnv[val.value]])\});\
device[\cf5 \\tilt\cf3 ].action_(\{\cf4 |val|\cf3  ~ctrl[3].set([~delEnv[val.value]])\});\
device[\cf5 \\spin\cf3 ].action_(\{\cf4 |val|\cf3  ~ctrl[4].set([~freqEnv[val.value]])\});\
device[\cf5 \\roll\cf3 ].action_(\{\cf4 |val|\cf3  ~ctrl[5].set([~harmEnv[val.value]])\});\
\
\cf2 // use the buttons to turn on/off the procmod\cf3 \
device[\cf5 \\leftBtn\cf3 ].action_(\{\cf4 |val|\cf3  if(val.value == 1, \{~proc1.play; ~proc2.release\})\}); \cf2 // left button starts the procmod\cf3 \
device[\cf5 \\rightBtn\cf3 ].action_(\{\cf4 |val|\cf3  if(val.value == 1, \{~proc2.play; ~proc1.release\})\}); \cf2 // right button stops it\cf3 \
\
\
\cf6 "=========================="\cf3 .postln;\
\cf6 "The INTERFACE is loaded and ready to go!"\cf3 .postln;\
\cf6 "=========================="\cf3 .postln;\
\}\
}