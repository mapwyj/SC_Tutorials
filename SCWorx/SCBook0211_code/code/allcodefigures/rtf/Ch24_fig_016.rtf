{\rtf1\ansi\deff0\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset128 Times New Roman;}{\f1\froman\fprq2\fcharset128 Times New Roman;}{\f2\fswiss\fprq2\fcharset128 Arial;}{\f3\froman\fprq2\fcharset0 Times New Roman;}{\f4\fmodern\fprq0\fcharset0 Courier New;}{\f5\fnil\fprq2\fcharset128 SimSun;}{\f6\fswiss\fprq2\fcharset0 Tahoma;}{\f7\fnil\fprq2\fcharset128 Lucida Sans;}{\f8\fnil\fprq0\fcharset128 Lucida Sans;}}
{\colortbl;\red0\green0\blue0;\red128\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af3\langfe2052\hich\f3\fs24\lang1033\loch\f3\fs24\lang1033\snext1 Normal;}
{\s2\sb240\sa120\keepn{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af7\afs28\lang1025\ltrch\dbch\af5\langfe2052\hich\f2\fs28\lang1033\loch\f2\fs28\lang1033\sbasedon1\snext3 Heading;}
{\s3\sl480\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af3\langfe2052\hich\f3\fs24\lang1033\loch\f3\fs24\lang1033\sbasedon1\snext3 Body Text;}
{\s4\sl480\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af8\afs24\lang1025\ltrch\dbch\af3\langfe2052\hich\f3\fs24\lang1033\loch\f3\fs24\lang1033\sbasedon3\snext4 List;}
{\s5\sb120\sa120{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af8\afs24\lang1025\ai\ltrch\dbch\af3\langfe2052\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext5 caption;}
{\s6{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af8\afs24\lang1025\ltrch\dbch\af3\langfe2052\hich\f3\fs24\lang1033\loch\f3\fs24\lang1033\sbasedon1\snext6 Index;}
{\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033\sbasedon3\snext7 Code;}
{\*\cs9\cf0\rtlch\af7\afs24\lang1081\ltrch\dbch\af5\langfe2052\hich\f0\fs24\lang2057\loch\f0\fs24\lang2057 Default Paragraph Font;}
{\*\cs10\cf0\rtlch\af7\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033\sbasedon9 Code Char;}
{\*\cs11\cf0\rtlch\af7\afs24\lang1081\ltrch\dbch\af5\langfe2052\hich\f0\fs24\lang2057\loch\f0\fs24\lang2057\sbasedon9 hl kwd;}
{\*\cs12\cf0\rtlch\af7\afs24\lang1081\ltrch\dbch\af5\langfe2052\hich\f0\fs24\lang2057\loch\f0\fs24\lang2057\sbasedon9 hl sym;}
}
{\info{\title Figure 24}{\author gibsona}{\creatim\yr2009\mo11\dy17\hr19\min14}{\author gibsona}{\revtim\yr2009\mo11\dy17\hr19\min15}{\printim\yr0\mo0\dy0\hr0\min0}{\comment StarWriter}{\vern3300}}\deftab720
{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\pgdscnxt0 Standard;}
{\pgdsc1\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\pgdscnxt0 First Page;}}
{\*\pgdscno0}\paperh15840\paperw12240\margl1440\margr1440\margt1440\margb1440\sectd\sbknone\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pard\plain \ltrpar\s3\sl480\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af3\langfe2052\hich\f3\fs24\lang1033\loch\f3\fs24\lang1033 {\rtlch \ltrch\loch\f3\fs24\lang1033\i0\b0 Figure 24.16}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 #include <math.h>}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 #include "GC.h"}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 #include "PyrKernel.h"}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 #include "PyrPrimitive.h"}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033{\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0\cf2\rtlch // Primitive implementation of atan2,}
\par \pard\plain \ltrpar\s7\cf2\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 // calling the function from libm.}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 static int prAtan2(struct VMGlobals *g, int numArgsPushed)}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \{}
\par \pard\plain \ltrpar\s7\cf2\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab // Pointer to arguments}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab PyrSlot *args = g->sp - numArgsPushed + 1;}
\par \pard\plain \ltrpar\s7\cf2\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab // Pointer to receiver (self)}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab PyrSlot* self = args + 0;}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033{\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0\cf2\rtlch \tab // Pointer to argument}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab PyrSlot* arg  = args + 1;}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab double x, y;}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab int err;}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab }
\par \pard\plain \ltrpar\s7\cf2\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab // Get receiver value}
\par \pard\plain \ltrpar\s7\sl480\slmult1\li0\ri0\lin0\rin0\fi720\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 err = slotDoubleVal(self, &x);}
\par \pard\plain \ltrpar\s7\cf2\sl480\slmult1\li0\ri0\lin0\rin0\fi720\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 // Signal error for invalid input type}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab if (err != errNone) return err;}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab }
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033{\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0\cf2\rtlch \tab // Get argument value}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab err = slotDoubleVal(arg, &y);}
\par \pard\plain \ltrpar\s7\cf2\sl480\slmult1\li0\ri0\lin0\rin0\fi720\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 // Signal error for invalid input type}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab if (err != errNone) return err;}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab }
\par \pard\plain \ltrpar\s7\cf2\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab // Compute result}
\par \pard\plain \ltrpar\s7\sl480\slmult1\li0\ri0\lin0\rin0\fi720\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 double result = atan2(x, y);}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033{\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0\cf2\rtlch \tab // Set top of stack to return value}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab SetFloat(self, result);}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab }
\par \pard\plain \ltrpar\s7\cf2\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab // Signal success}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang255\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab return errNone;}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \}}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 
\par \pard\plain \ltrpar\s7\cf2\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 // Call this function during initialization,}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033{\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0{\cf2 // e.g. from }}{\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0{\*\cs11\cf0\rtlch\ltrch\dbch\hich\f0\fs24\lang2057\loch\f0\fs24\lang2057\cf2 initPrimitives}{\*\cs12\cf0\rtlch\ltrch\dbch\hich\f0\fs24\lang2057\loch\f0\fs24\lang2057\cf2 ()}{\cf2  in PyrPrimitive.cpp}}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 void initMyPrimitives()}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \{}
\par \pard\plain \ltrpar\s7\cf2\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab // Initialize primitive indices}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab int base = nextPrimitiveIndex(), index = 0;}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 
\par \pard\plain \ltrpar\s7\cf2\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab // Define primitive with two arguments (self, operand)}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \tab {\ltrch\hich\lang1034\loch\lang1034 definePrimitive(base, index++, "_MyFloatAtan2", prAtan2, 2, 0);}}
\par \pard\plain \ltrpar\s7\cf2\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1034\loch\f4\fs24\lang1034 {\rtlch \ltrch\loch\f4\fs24\lang1034\i0\b0 \tab // ... define more primitives here ...}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 {\rtlch \ltrch\loch\f4\fs24\lang1033\i0\b0 \}}
\par \pard\plain \ltrpar\s7\sl480\slmult1\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af6\langfe2052\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033 
\par \pard\plain \ltrpar\s1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs24\lang1025\ltrch\dbch\af3\langfe2052\hich\f3\fs24\lang1033\loch\f3\fs24\lang1033 
\par }