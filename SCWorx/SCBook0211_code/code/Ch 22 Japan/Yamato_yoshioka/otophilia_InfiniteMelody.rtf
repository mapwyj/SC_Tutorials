{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf440
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 // InfiniteMelody by_otophilia\cf0 \
\
(\
s = \cf3 Server\cf0 .default;\
\pard\pardeftab720\ql\qnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 Routine\cf0 .run \{\cf3 var\cf0  c; c = \cf3 Condition\cf0 .new; s.bootSync(c);\
\
(\
	\cf3 SynthDef\cf0 (\cf4 'infOrgan'\cf0 ,\{\
		\cf3 arg\cf0  outBus=0, pitch=50, amp=1.0;\
		\cf3 var\cf0  out;\
		pitch = pitch + \cf3 LFNoise1\cf0 .kr(1000, 0.02);\
		pitch = pitch.midicps;\
		amp = amp * \cf3 AmpComp\cf0 .kr(pitch, 60);\
		amp = \cf3 EnvGen\cf0 .kr(\cf3 Env\cf0 .linen(0.04, 0.10, 0.06, 1, -2),1,amp, doneAction:2);\
		out = \cf3 LFTri\cf0 .ar(pitch, 0, amp);\
		out = \cf3 Pan2\cf0 .ar(out, \cf3 LFNoise2\cf0 .kr(4, 0.5));\
		\cf3 Out\cf0 .ar(outBus, out);\
	\}).send(s);\
	\cf3 SynthDef\cf0 (\cf4 'reverb'\cf0 ,\{\
		\cf3 arg\cf0  inBus=0, outBus=0;\
		\cf3 var\cf0  out, rev;\
		out = \cf3 In\cf0 .ar(inBus, 2);\
		rev = out;\
		3.do\{rev = \cf3 AllpassN\cf0 .ar(rev, 0.050, [rrand(0.020,0.050), rrand(0.020,0.050)], 0.3)\};\
		3.do\{rev = \cf3 AllpassN\cf0 .ar(rev, 0.050, [rrand(0.020,0.050), rrand(0.020,0.050)], 2)\};\
		out = \cf3 LPF\cf0 .ar(rev, 5000, 0.5, out);\
		out = \cf3 Limiter\cf0 .ar(out, 1, 0.02);\
		\cf3 ReplaceOut\cf0 .ar(outBus, out);\
	\}).send(s);\
); s.sync(c);\
\
(\
	~seq = \cf3 Array\cf0 .fill(12, \{\cf3 |i|\cf0  (i*5)+\
		[0, -1, 0, -5, -3, -1, 0, 2, 4, 2, 4, 0, 2, 4, 5, 2, 4, 7, 12, 11, 9, 7, 5, 4, 2, 4, 5, 2, 4, 0, 2, 4]\
		%12\}).flat;\
	~seq2 = \cf3 Array\cf0 .fill(12, \{\cf3 |i|\cf0  (i*5)%12+\
		[-8, -5, -8, -8, -7, -10, -8, -5, -0, -5, 0, -5, -1, 0, 2, -5, 0, 2, 4, 7, 5, 0, -3, 0, -1, -0, 2, -5, 0, -5, -1, 0]\
		\}).flat;\
);\
\
(	\
	~clock = \cf3 TempoClock\cf0 (120/60);\
	~i = 32;\
	\
	~msg = \cf3 List\cf0 .new;\
	~group = \cf3 Group\cf0 .new;\
	\
	~reverb = \cf3 Synth\cf0 (\cf4 'reverb'\cf0 , \cf3 nil\cf0 , ~group, \cf4 \\addAfter\cf0 );\
	~clock.schedAbs(~clock.beats.floor + 1, \{\
		~msg = \cf3 List\cf0 .new;\
		\
		12.do\{\cf3 |i|\cf0 \
			\cf3 var\cf0  pitch, amp, syn;\
			pitch = ~seq.wrapAt(~i) + (i*12);\
			syn = \cf3 Synth\cf0 .basicNew(\cf4 'infOrgan'\cf0 );\
			amp = 0.2;\
			if(pitch<40)\{amp=amp*(pitch-10/(40-10)).min(1).max(0).squared\};\
			if(pitch>120)\{amp=amp*(1.0-(pitch-120/(140-120))).min(1).max(0).squared\};\
			~msg.add( syn.newMsg(~group, [\cf4 'pitch'\cf0 , pitch, \cf4 'amp'\cf0 , amp, \cf4 'outBus'\cf0 , 0]) );\
		\};\
		\
		6.do\{\cf3 |i|\cf0 \
			\cf3 var\cf0  pitch, amp, syn;\
			pitch = ~seq2.wrapAt(~i) + (i*12) + 48;\
			syn = \cf3 Synth\cf0 .basicNew(\cf4 'infOrgan'\cf0 );\
			amp = 0.1;\
			if(pitch<60)\{amp=amp*(pitch-48/(60-48)).min(1).max(0).squared\};\
			if(pitch>110)\{amp=amp*(1.0-(pitch-110/(140-110))).min(1).max(0).squared\};\
			~msg.add( syn.newMsg(~group, [\cf4 'pitch'\cf0 , pitch, \cf4 'amp'\cf0 , amp, \cf4 'outBus'\cf0 , 0]));\
		\};\
		\
		~msg !? \{s.listSendBundle(s.latency, ~msg)\};\
		~i = ~i+1;\
		(1/4)\
	\});\
);\
\
\};\
\
);}