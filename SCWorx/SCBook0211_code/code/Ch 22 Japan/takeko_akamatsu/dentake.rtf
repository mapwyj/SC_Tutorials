{\rtf1\mac\ansicpg10001\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green115\blue0;\red191\green0\blue0;
\red96\green96\blue96;}
\deftab560
\pard\pardeftab560\ql\qnatural

\f0\fs18 \cf0 \
(\
// First you need to send SynthDefs below.\
// This is the sequence to be control by iPhone.\
\
~kick = \cf2 Pbind\cf0 (\
	\cf3 \\tempo\cf0 ,2.15,\
	\cf3 \\dur\cf0 , \cf2 Pseq\cf0 ([1.01,0.99],\cf2 inf\cf0 ),\
	\cf3 \\amp\cf0 , 0.15,\
	\cf3 \\instrument\cf0 ,\cf3 \\drum_kick\cf0 \
).play; \cf4 // returns an EventStream\cf0 \
\
~snare = \cf2 Pbind\cf0 (\
	\cf3 \\tempo\cf0 ,2.15,\
	\cf3 \\dur\cf0 , \cf2 Pseq\cf0 ([\cf2 Pseq\cf0 ([1],7),\cf2 Pseq\cf0 ([0.77,0.23],1)],\cf2 inf\cf0 ),\
	\cf3 \\amp\cf0 ,\cf2 Pseq\cf0 ([0, 0.25,0,0.15,0, 0.25,0,0.2,0.12] * 0.8,\cf2 inf\cf0 ),\
	\cf3 \\releasetime\cf0 , \cf2 Pshuf\cf0 ([0.1,0.1,0.4],\cf2 inf\cf0 ),\
	\cf3 \\instrument\cf0 ,\cf3 \\SOSsnare\cf0 \
).play; \cf4 // returns an EventStream\cf0 \
\
~chord = \cf2 Pbind\cf0 (\
	\cf3 \\dur\cf0 , \cf2 Pseq\cf0 ([\cf2 Pseq\cf0 ([1.52,1.48,1]/2,3),\cf2 Pseq\cf0 ([1.02,0.98,2]/2,1)],\cf2 inf\cf0 ),\
	\cf3 \\amp\cf0 , 0.2,\
	\cf3 \\reverb\cf0 , 0.2,\
	\cf3 \\releaseTime\cf0 , \cf2 Pseq\cf0 ([0.4,0.15,0.17] * 0.8,\cf2 inf\cf0 ),\
	\cf3 \\midinote\cf0 , \cf2 Pseq\cf0 ([[63,65,68,70]] , \cf2 inf\cf0 ) - \cf2 Pseq\cf0 ([\cf2 Pseq\cf0 ([0,0,12],3), \cf2 Pseq\cf0 ([0,12,0],1)],\cf2 inf\cf0 ),\
	\cf3 \\instrument\cf0 ,\cf3 \\chord_bass\cf0 \
).play; \cf4 // returns an EventStream\cf0 \
\
~melo = \cf2 Pbind\cf0 (\
	\cf3 \\dur\cf0 , \cf2 Pseq\cf0 ([0.5,0.5,1,1.5,0.5,0.5,0.5,1,1.5,0.5,   \
	0.5,0.5,1,1.5,0.5,0.5,0.5,1,0.5,1,0.5],\cf2 inf\cf0 ),\
	\cf3 \\amp\cf0 , 0.1,\
	\cf3 \\filtfreq1\cf0 , \cf2 Prand\cf0 ([10000,18000,7000,12000],\cf2 inf\cf0 ),\
	\cf3 \\filtfreq2\cf0 , \cf2 Prand\cf0 ([1000, 500],\cf2 inf\cf0 ),\
	\cf3 \\releaseTime\cf0 , \cf2 Pseq\cf0 ([0.2,0.2,0.2,0.1,0.2,0.2,0.2,0.2,0.3,0.2, 0.2,0.2,0.2,0.3,0.2,0.2,0.2,0.2,0.1,0.1,0.1]*0.9,\cf2 inf\cf0 ),\
	\cf3 \\midinote\cf0 , \cf2 Pseq\cf0 ([ \cf2 Prand\cf0 ([68, 70, 77, 77, 75, 68,70,75,75,74],1), \cf2 Prand\cf0 ([68, 70, 77, 77, 75, 68,70,75,75,74,72],1)], \cf2 inf\cf0 ),\
	\cf3 \\instrument\cf0 ,\cf3 \\melody\cf0 \
).play; \cf4 // returns an EventStream\cf0 \
\
~bass = \cf2 Pbind\cf0 (\
	\cf3 \\dur\cf0 , \cf2 Pseq\cf0 ([0.5,0.5,0.5,0.5,0.5,0.5,5],\cf2 inf\cf0 ),\
	\cf3 \\amp\cf0 , \cf2 Pseq\cf0 ([0,1,1,1,1,1,1],\cf2 inf\cf0 ) * 0.2,\
	\cf3 \\filtfreq1\cf0 , \cf2 Prand\cf0 ([5000,8000,4000,6000],\cf2 inf\cf0 ),\
	\cf3 \\filtfreq2\cf0 , \cf2 Prand\cf0 ([100, 500],\cf2 inf\cf0 ),\
	\cf3 \\releaseTime\cf0 , \cf2 Pseq\cf0 ([0.05],\cf2 inf\cf0 ),\
	\cf3 \\midinote\cf0 , \cf2 Prand\cf0 ([68,68,77,68,77,68,68]-24, \cf2 inf\cf0 ),\
	\cf3 \\instrument\cf0 ,\cf3 \\bass\cf0 \
).play; \cf4 // returns an EventStream\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\ql\qnatural\pardirnatural
\cf0 )\
\
\pard\pardeftab560\ql\qnatural
\cf0 \
\cf4 /////// OSCresponder --------------------------------------------------\cf0 \
\cf4 // to control via iPhone, you need aka.iPhone/experiment2 available from http://www.iamas.ac.jp/~aka/iphone/\cf0 \
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\ql\qnatural
\cf0 \
\
\pard\pardeftab560\ql\qnatural
\cf2 OSCresponder\cf0 (\cf2 nil\cf0 , \cf3 '/slider'\cf0 , \{ \cf2 |t, r, msg|\cf0  ( \cf5 "Slider time:"\cf0  + t); msg;\
\
x = case\
	\{ msg.at(1) == 0 \}   \{msg.at(2).post; \}\
	\{ msg.at(1) == 1 \}   \{msg.at(2).post; \}\
	\{ msg.at(1) == 2 \}   \{\}\
	\{ msg.at(1) == 3 \}    \{\}\
\
 \}).add;\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\ql\qnatural
\cf0 \
\pard\pardeftab560\ql\qnatural
\cf2 OSCresponder\cf0 (\cf2 nil\cf0 , \cf3 '/toggle'\cf0 , \{ \cf2 |t, r, msg|\cf0  ( \cf5 "toggle time:"\cf0  + t); msg;\
\
x = case\
	\{ msg.at(1) == 0 \}   \{if (msg.at(2) == 0 ,\{~kick.pause;\cf5 "kick_pause"\cf0 .postln\},\{~kick.resume; \cf5 "kick_start"\cf0 .postln\})\}\
	\{ msg.at(1) == 1 \}   \{if (msg.at(2) == 0 ,\{~snare.pause;\cf5 "snare_pause"\cf0 .postln\}, \{~snare.reset; ~snare.resume; \cf5 "snare_start"\cf0 .postln\})\}\
	\{ msg.at(1) == 2 \}   \{if (msg.at(2) == 0 ,\{~chord.pause;\cf5 "chord_pause"\cf0 .postln\}, \{~chord.resume;\cf5 "chord_start"\cf0 .postln\})\}\
	\{ msg.at(1) == 3 \}   \{if (msg.at(2) == 0 ,\{~melo.pause;\cf5 "melo_pause"\cf0 .postln\}, \{~melo.resume;\cf5 "melo_start"\cf0 .postln\})\}\
\
 \}).add;\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\ql\qnatural
\cf0 \
\
\pard\pardeftab560\ql\qnatural
\cf2 OSCresponder\cf0 (\cf2 nil\cf0 , \cf3 '/button'\cf0 , \{ \cf2 |t, r, msg|\cf0  ( \cf5 "Button time:"\cf0  + t); msg;\
\
x = case\
	\{ msg.at(1) == 0 \}   \{if (msg.at(2) == 1 ,\{\cf5 "I "\cf0 .post;\},\{\cf5 "LOVE "\cf0 .post;\
	\})\}\
	\{ msg.at(1) == 1 \}   \{if (msg.at(2) == 1 ,\{\cf5 "i"\cf0 .post;\}, \{\cf5 "Phone "\cf0 .post;\
	\})\}\
	\{ msg.at(1) == 2 \}   \{if (msg.at(2) == 1 ,\{\cf5 "Super"\cf0 .post;\}, \{\cf5 "Collider! "\cf0 .postln\})\}\
	\{ msg.at(1) == 3 \}   \{if (msg.at(2) == 1 ,\{~se = \cf2 Pbind\cf0 (\
					\cf3 \\dur\cf0 , \cf2 Pseq\cf0 ([1,0.5,0.5,0.5,0.5,0.5]/2, 1),\cf3 \\amp\cf0 , 0.8, \cf3 \\pan\cf0 ,\cf2 Pseq\cf0 ([-0.5,0.5],\cf2 inf\cf0 ),\
					\cf3 \\releaseTime\cf0 , \cf2 Pseq\cf0 ([0.8,0.5,0.5,0.5,0.5,1.5]/6.0,\cf2 inf\cf0 ),\
					\cf3 \\midinote\cf0 , \cf2 Pseq\cf0 ([65,68,70,68,65,75,],\cf2 inf\cf0 )  + \cf2 Prand\cf0 ([  \cf2 Pseq\cf0 ([12],6),   \cf2 Pseq\cf0 ([-12],6),  \
					 \cf2 Pseq\cf0 ([24],6)],\cf2 inf\cf0 ),\cf3 \\instrument\cf0 ,\cf3 \\bass\cf0 ,	\cf3 \\tempo\cf0 ,2.15 ).play; \cf4 // returns an EventStream\cf0 \
	\}, \{\})\}\
\
 \}).add;\
\
\
\
)\
\
\
\cf4 /////// SynthDefs --------------------------------------------------\cf0 \
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab160\ql\qnatural\pardirnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\ql\qnatural\pardirnatural
\cf2 SynthDef\cf0 (\cf3 \\chord_bass\cf0 ,\{\
	\cf2 arg\cf0  amp=0.1, sustain=0.1, freq=400, filtfreq1 = 7000, filtfreq2=1000, releaseTime = 0.11, reverb = 0.1,rq=0.99;\
	\cf2 var\cf0  env, sound;\
	env=\cf2 EnvGen\cf0 .ar(\cf2 Env\cf0 .perc(releaseTime:releaseTime),doneAction:2);\
	sound=\cf2 FreeVerb\cf0 .ar(\cf2 RLPF\cf0 .ar(\cf2 LFSaw\cf0 .ar(freq,0,amp),\cf2 Line\cf0 .kr(filtfreq1, filtfreq2,0.1),rq) ,reverb, 0.2,0.5);\
	\cf2 Out\cf0 .ar(0,\cf2 Pan2\cf0 .ar(sound*env, 0.0))\
\}).store;\
\
\
\cf2 SynthDef\cf0 (\cf3 \\melody\cf0 ,\{\
	\cf2 arg\cf0  amp=0.1, sustain=0.1, freq=400, filtfreq1 = 2000, filtfreq2=1000, releaseTime = 0.11,reverb=0.3;\
	\cf2 var\cf0  env, sound;\
	env=\cf2 EnvGen\cf0 .ar(\cf2 Env\cf0 ([0,1,1,0],[0.01,releaseTime,0.05]),doneAction:2);\
	sound=\cf2 LPF\cf0 .ar(\cf2 Pulse\cf0 .ar([freq,freq*0.5001],0.5,amp),\cf2 Line\cf0 .kr(filtfreq1, filtfreq2, 0.2)) ;\
	\cf2 Out\cf0 .ar(0,\cf2 Pan2\cf0 .ar(sound*env, 0.0))\
\}).store;\
\
\
\cf2 SynthDef\cf0 (\cf3 \\bass\cf0 ,\{\
	\cf2 arg\cf0  amp=0.1, sustain=0.1, freq=400, filtfreq1 = 2000, filtfreq2=1000, releaseTime = 0.11,reverb=0.1;\
	\cf2 var\cf0  env, sound;\
	env=\cf2 EnvGen\cf0 .ar(\cf2 Env\cf0 ([0,1,1,0],[0.01,releaseTime,0.03]),doneAction:2);\
	sound=\cf2 LPF\cf0 .ar(\cf2 Pulse\cf0 .ar(freq,0.4,amp) + \cf2 SinOsc\cf0 .ar(freq,0.5,0.05),\cf2 Line\cf0 .kr(filtfreq1, filtfreq2, 0.3)) ;\
	\cf2 Out\cf0 .ar(0,\cf2 Pan2\cf0 .ar(sound*env, 0.0))\
\}).store;\
\pard\pardeftab560\ql\qnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\ql\qnatural\pardirnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\ql\qnatural\pardirnatural
\cf4 // chineseroom's drum_kick\cf0 \
\pard\pardeftab560\sl280\ql\qnatural
\cf0 		\cf2 SynthDef\cf0 (\cf5 "drum_kick"\cf0 , \{\
			\cf2 arg\cf0  freq=440, gate=1, amp=0.5, source, pan = 0.0 ;\
			source = \
			\cf2 Pan2\cf0 .ar(\
			\cf2 SinOsc\cf0 .ar(\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0.0001, 1.5, 1, -200), gate, 1000, 45, doneAction:2), 1, 1) +\
			((\cf2 BPF\cf0 .ar([\cf2 GrayNoise\cf0 .ar(6),\cf2 GrayNoise\cf0 .ar(6)],\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0.001, 0.3, 1, -200), gate, 6000, 70), 1.5)).distort * \cf2 Line\cf0 .kr(0.3,0,0.1))\
			* \
			\cf2 EnvGen\cf0 .kr(\cf2 Env\cf0 .perc(0.0001, 0.09, amp, 8)),0);\
			\cf2 Out\cf0 .ar(0, source);\
		\}).store;\
		\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab160\ql\qnatural\pardirnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab160\ql\qnatural\pardirnatural
\cf2 SynthDef\cf0 (\cf3 \\SOSsnare\cf0 ,\
\cf4 // recipe basically from Gordon Reid\cf0 \
\cf4 // {\field{\*\fldinst{HYPERLINK "http://www.soundonsound.com/sos/Mar02/articles/synthsecrets0302.asp"}}{\fldrslt http://www.soundonsound.com/sos/Mar02/articles/synthsecrets0302.asp}}\cf0 \
\cf4 // programmed by Renick Bell, renick_at_gmail.com\cf0 \
	\{\cf2 arg\cf0  out = 0, decay = 0.12, drum_mode_level = 0.25,\
	snare_level = 40, snare_tightness = 2000,\
	freq = 405, amp = 0.8;\
	\cf2 var\cf0  drum_mode_sin_1, drum_mode_sin_2, drum_mode_pmosc, drum_mode_mix,\
drum_mode_env;\
	\cf2 var\cf0  snare_noise, snare_brf_1, snare_brf_2, snare_brf_3, snare_brf_4,\
snare_reson;\
	\cf2 var\cf0  snare_env;\
	\cf2 var\cf0  snare_drum_mix;\
\
	drum_mode_env = \cf2 EnvGen\cf0 .ar(\cf2 Env\cf0 .perc(0.005, decay), 1.0, doneAction: 2);\
	drum_mode_sin_1 = \cf2 SinOsc\cf0 .ar(freq*0.53, 0, drum_mode_env * 0.5);\
	drum_mode_sin_2 = \cf2 SinOsc\cf0 .ar(freq, 0, drum_mode_env * 0.5);\
	drum_mode_pmosc = \cf2 PMOsc\cf0 .ar(	\cf2 Saw\cf0 .ar(freq*0.85),\
					184,\
					0.5/1.3,\
					mul: drum_mode_env*5,\
					add: 0);\
	drum_mode_mix = \cf2 Mix\cf0 .new([drum_mode_sin_1, drum_mode_sin_2,\
drum_mode_pmosc]) * drum_mode_level;\
\
\cf4 // choose either noise source below\cf0 \
\cf4 //	snare_noise = Crackle.ar(2.01, 1);\cf0 \
	snare_noise = \cf2 LFNoise0\cf0 .ar(20000, 0.1);\
	snare_env = \cf2 EnvGen\cf0 .ar(\cf2 Env\cf0 .perc(0.005, decay, curve:-5), 1.0, doneAction: 2);\
	snare_brf_1 = \cf2 BRF\cf0 .ar(in: snare_noise, freq: 8000, mul: 0.5, rq: 0.1);\
	snare_brf_2 = \cf2 BRF\cf0 .ar(in: snare_brf_1, freq: 5000, mul: 0.5, rq: 0.1);\
	snare_brf_3 = \cf2 BRF\cf0 .ar(in: snare_brf_2, freq: 3600, mul: 0.5, rq: 0.1);\
	snare_brf_4 = \cf2 BRF\cf0 .ar(in: snare_brf_3, freq: 2000, mul: snare_env, rq: 0.0001);\
	snare_reson = \cf2 Resonz\cf0 .ar(snare_brf_4, snare_tightness, mul: snare_level) ;\
	snare_drum_mix = \cf2 Mix\cf0 .new([drum_mode_mix, snare_reson]) * 5 * amp;\
	\cf2 Out\cf0 .ar(out, [snare_drum_mix, snare_drum_mix])\
	\}\
).store;\
\pard\pardeftab560\ql\qnatural
\cf0 \
)}