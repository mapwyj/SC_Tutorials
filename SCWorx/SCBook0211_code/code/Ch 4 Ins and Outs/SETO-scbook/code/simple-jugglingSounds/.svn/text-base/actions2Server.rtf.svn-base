{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red0\green0\blue191;
\red0\green0\blue0;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs26 \cf2 Club\cf0 .action = \{\cf2 |me|\cf0 \
	me.flipAngleVel.isNaN.not.if(\{\
		~rotVel.set(me.id, me.flipAngleVel);\
	\}, \{\
		~rotVel.set(me.id, 0);\
	\});\
\
	~absX.set(me.id, me.pos[0]);\
	~absY.set(me.id, me.pos[1]);\
	~height.set(me.id, me.pos.last);\
\
	~relX.set(me.id, me.posRelHead[0]);\
	~relY.set(me.id, me.posRelHead[1]);\
\
	~zeroCrossing.set(me.id, me.zeroCrossing.binaryValue);\
	~catched.set(me.id, me.catched.binaryValue);\
	~
\fs18 posRelGPointX.set(
\fs26 me.id, me.posRelGroundPoint[0]
\fs18 );
\fs26 \
	~
\fs18 posRelGPointY.set(
\fs26 me.id, me.posRelGroundPoint[1]
\fs18 );
\fs26 \
	~
\fs18 posRelGPointZ.set(
\fs26 me.id, me.posRelGroundPoint[2]
\fs18 );
\fs26 \
	~
\fs18 posRelHeadX.set(
\fs26 me.id, me.posRelHead[0]
\fs18 );
\fs26 \
	~
\fs18 posRelHeadY.set(
\fs26 me.id, me.posRelHead[1]
\fs18 );
\fs26 \
	~
\fs18 posRelHeadZ.set(
\fs26 me.id, me.posRelHead[2]
\fs18 );\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 /*	
\fs26 \cf3 	i = i+1 % 100;\
\
	(i == 0).if(\{\
		(me.id == 0).if\{\
			me.posRelHead.round(0.001).postln;\
		\}\
	\});\
*/	\

\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs26 \cf0 \};\
\
i = 0;\
\cf4 JugglersHead\cf5 .action = \{\cf4 |me|\cf5 \
	~regionChanged.set(0, me.regionChanged.binaryValue);\
	~region.set(0, me.region);\
	me.regionChanged.if\{\
		
\fs18 q.regionChange(me.region);
\fs26 \
	\};\
\cf6 //	me.pos[0].postln;\cf5 \
	~headAbsX.set(0, me.pos[0]);\
	~headAbsY.set(0, me.pos[1]);\
	~headHeight.set(0, me.pos[2]);\
\
\};\
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs18 \cf3 //JugglingInteraction.distFunc = nil;
\fs26 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs18 \cf2 JugglingInteraction\cf0 .headClubAction = \{\cf2 |distance, isValid, head, club|\cf0  \
	\cf3 // suppose that all interactions are valid\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 	~dist.set(club.id, distance);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \};\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 JugglingInteraction\cf0 .distFunc = \cf2 nil\cf0 ;
\fs26 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs18 \cf0 \
\
\cf3 /*\
JugglingInteraction.clubsAction = \{|distance, isValid, clubs| \
\};\
*/\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 /*\
~dist2 = \\control -> [1, 1, 1]\
~dist2.set(0, 12)\
~dist.unset(0)\
~a = \{~dist2.kr.poll\}\
~a.clear\
\
~a.fadeTime = 4\
\
~a = \{LFSaw.ar((~dist2.kr*2.5) * 1900 + 300) * 0.01 * ~height.kr * 2\}\
~a = \{LFSaw.ar((~dist2.kr*2.5 * 90 + 20).midicps) * 0.01 * ~rotVel.kr.lag(0.2) * 0.1\}\
~a = \{LFSaw.ar((~dist2.kr*2.5 * 90 + 20).midicps) * 0.02 * LFPulse.kr(~rotVel.kr.lag(0.2) * 0.1 * 20)\}\
\
\
~a = \{Line.kr(0, 1, 10) * LFSaw.ar((~dist2.kr*2.5 * 90 + 20).midicps) * 0.02 * LFPulse.kr(~rotVel.kr.lag(0.2) * 0.1 * 20)\}\
\
~a = \{LFSaw.ar((~dist2.kr*2.5 * 90 + 20).midicps) * 0.02 * LFPulse.kr(~rotVel.kr.lag(0.2) * 0.1 * 20 * Line.kr(1, 0, 10))\}\
\
~a = \{\
	var ampMod = LFPulse.kr(~rotVel.kr.lag(0.2) * 0.1 * 20 * MouseX.kr(0, 1) );\
	LFSaw.ar(\
		(~dist2.kr*2.5 * 90 + 20).midicps * (ampMod.lag(0.2)+1)\
	) \
	* 0.02 \
	* ampMod;\
\}\
\
\
\
~a.playN([0, 5, 7])\
*/}