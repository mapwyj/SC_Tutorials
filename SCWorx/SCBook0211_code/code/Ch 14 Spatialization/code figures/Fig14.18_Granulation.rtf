{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf440
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red191\green0\blue0;
}
\deftab1134
\pard\pardeftab1134\ql\qnatural

\f0\fs24 \cf0 (\
b = \cf2 Buffer\cf0 .read(s, \cf3 "sounds/a11wlk01.wav"\cf0 );\
\cf2 SynthDef\cf0 (\cf3 "grain"\cf0 ,\{ \cf2 arg\cf0  i_out=0, i_sampbufnum, dur = 0.05, \
 pointer, offset = 0.005, amp = 1.0, loop = 1;\
 \cf2 var\cf0  thisStart, thisDur, grain;\
 thisStart = pointer + \cf2 IRand\cf0 (0, offset); \cf4 // adds random time offset\cf0 \
 grain = \cf2 EnvGen\cf0 .ar(\cf2 Env\cf0 .sine, 1.0, amp, 0.0, dur, 2) \
  * \cf2 PlayBuf\cf0 .ar(1,i_sampbufnum, \cf2 BufRateScale\cf0 .ir(i_sampbufnum),\
   1, thisStart,loop);\
 \cf2 OffsetOut\cf0 .ar(i_out,grain); \cf4 // use OffsetOut for precise sub-block timing\cf0 \
\}).send(s);\
)\
\
(\
x = \{\
\cf2 var\cf0  numGrains = 32; \cf4 // approximate number of simultaneous grains\cf0 \
\cf2 var\cf0  numChannels = 2; \cf4 // adjust for your setup\cf0 \
\cf2 var\cf0  dur = 0.05, durRand = 0.05, thisDur;\
\cf2 var\cf0  start, now;\
\cf2 var\cf0  numGrainsRecip;\
numGrainsRecip = numGrains.reciprocal; \cf4 // save some divides by converting to reciprocal\cf0 \
\
start = \cf2 Main\cf0 .elapsedTime;\
loop(\{ \
 now = \cf2 Main\cf0 .elapsedTime - start;\
 thisDur = dur + durRand.rand;\
 s.bind(\{\cf2 Synth\cf0 (\cf3 "grain"\cf0 , [i_out: numChannels.rand, i_sampbufnum: b, dur: thisDur, \
  pointer: now * b.sampleRate, amp: numGrainsRecip]);\
 \}); \cf4 // send as a bundle for precise sub-block timing\cf0 \
 (thisDur * numGrainsRecip).wait;\
\})\
\}.fork;\
)\
\
x.stop; b.free;\
\
}