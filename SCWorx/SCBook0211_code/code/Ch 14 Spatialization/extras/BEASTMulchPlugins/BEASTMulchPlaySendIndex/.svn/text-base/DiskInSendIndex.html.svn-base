<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title></title>
<meta name="Generator" content="Cocoa HTML Writer">
<meta name="CocoaVersion" content="824.42">
<style type="text/css">
p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 15.0px Helvetica}
p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #062ba9; min-height: 12.0px}
p.p3 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica}
p.p4 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; min-height: 12.0px}
p.p5 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco}
p.p6 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #a71e12}
p.p7 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #606060}
p.p8 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #bf0000}
span.s1 {font: 18.0px Helvetica}
span.s2 {color: #0022f5}
span.s3 {color: #0030eb}
span.s4 {font: 9.0px Monaco}
span.s5 {color: #0019b7}
span.s6 {color: #606060}
span.s7 {color: #000000}
span.s8 {color: #0000bf}
span.s9 {color: #bf0000}
span.s10 {color: #007300}
span.Apple-tab-span {white-space:pre}
</style>
</head>
<body>
<p class="p1"><span class="s1"><b>DiskInSendIndex<span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></b></span><b>stream in audio from a file with index send</b></p>
<p class="p2"><br></p>
<p class="p2"><br></p>
<p class="p3"><b>DiskInSendIndex.ar(numChannels, bufnum, indFreq, id)</b></p>
<p class="p2"><br></p>
<p class="p3">Continuously play a longer soundfile from disk while sending the current frame index as a /tr OSC message.<span class="Apple-converted-space">  </span>This requires a buffer to be preloaded with one buffer size of sound.</p>
<p class="p3">See also <a href="PlayBufSendIndex.html"><span class="s2">PlayBufSendIndex</span></a> for playing a soundfile loaded into memory. See <a href="SC://SendTrig"><span class="s3">SendTrig</span></a> for more details on the format of /tr messages.</p>
<p class="p4"><br></p>
<p class="p3"><span class="s4"><span class="Apple-tab-span">	</span></span><b>numChannels</b> - The number of channels of the file. Non-modulatable.</p>
<p class="p3"><span class="Apple-tab-span">	</span><b>bufnum</b> - The number of the buffer to be used to stream in data.</p>
<p class="p3"><span class="Apple-tab-span">	</span><b>indFreq</b><span class="Apple-converted-space">  </span>- The frequency of /tr messages in Hz. Default is 10.</p>
<p class="p3"><span class="Apple-tab-span">	</span><b>id</b> - The id number of the /tr message. The default is 0.</p>
<p class="p4"><br></p>
<p class="p5">(</p>
<p class="p5">b = <span class="s5">Buffer</span>.cueSoundFile(s, <span class="s6">"sounds/a11wlk01-44_1.aiff"</span>, 0, 1, bufferSize: 8192);</p>
<p class="p4"><br></p>
<p class="p4"><br></p>
<p class="p5"><span class="s5">o = OSCresponder</span>(s.addr,<span class="s6">'/tr'</span>,{ <span class="s5">arg</span> time,responder,msg;</p>
<p class="p5"><span class="Apple-tab-span">	</span>[time,responder,msg].postln;</p>
<p class="p5">}).add;</p>
<p class="p5">)</p>
<p class="p4"><br></p>
<p class="p4"><br></p>
<p class="p5">x = { <span class="s5">DiskInSendIndex</span>.ar(1, b.bufnum, 2) }.play;</p>
<p class="p4"><br></p>
<p class="p5">b.close;<span class="Apple-tab-span">	</span></p>
<p class="p4"><br></p>
<p class="p6">// again</p>
<p class="p6">// note the like named instance method, but different arguments</p>
<p class="p7"><span class="s7">b.cueSoundFile(</span>"sounds/a11wlk01-44_1.aiff"<span class="s7">, 0);<span class="Apple-tab-span">	</span></span></p>
<p class="p4"><span class="Apple-tab-span">	</span></p>
<p class="p5">x.free; b.close;<span class="Apple-tab-span">	</span></p>
<p class="p4"><br></p>
<p class="p8">//with a GUI</p>
<p class="p4"><br></p>
<p class="p5">(</p>
<p class="p5">b.close; b.cueSoundFile(<span class="s6">"sounds/a11wlk01-44_1.aiff"</span>, 0);<span class="Apple-tab-span">	</span></p>
<p class="p5">~srRecip = b.sampleRate.reciprocal;</p>
<p class="p5">w = <span class="s8">SCWindow</span>.new(b.path, <span class="s8">Rect</span>(200, 200, 990, 175));</p>
<p class="p5">w.view.decorator = <span class="s8">FlowLayout</span>(w.view.bounds);</p>
<p class="p5">~start = <span class="s8">SCButton</span>(w,<span class="s8">Rect</span>(0, 0, 60, 25));</p>
<p class="p5">~start.states = [</p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>[<span class="s6">"Play"</span>,<span class="s8">Color</span>.black,<span class="s8">Color</span>.green],</p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>[<span class="s6">"Stop"</span>,<span class="s8">Color</span>.black,<span class="s8">Color</span>.red]</p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>];</p>
<p class="p5">~start.action = { <span class="s8">arg</span> butt;</p>
<p class="p5"><span class="Apple-tab-span">	</span>[{~group.free; ~group = <span class="s8">nil</span>; ~synth = <span class="s8">nil</span>; b.close; b.cueSoundFile(<span class="s6">"sounds/a11wlk01-44_1.aiff"</span>, 0);}, ~playFunc][butt.value].value;<span class="Apple-tab-span">	</span></p>
<p class="p5">};</p>
<p class="p4"><br></p>
<p class="p5"><span class="s8">SCStaticText</span>.new(w, <span class="s8">Rect</span>(0, 0, 60, 15)); <span class="s9">// spacer</span></p>
<p class="p4"><br></p>
<p class="p5">~clock = <span class="s8">SCStaticText</span>.new(w, <span class="s8">Rect</span>(20, 0, 80, 25))</p>
<p class="p7"><span class="s7"><span class="Apple-tab-span">	</span>.font_(</span><span class="s8">Font</span><span class="s7">(</span>"Helvetica-Bold"<span class="s7">, 16))</span></p>
<p class="p5"><span class="Apple-tab-span">	</span>.string_(0.asTimeString);</p>
<p class="p5">w.view.decorator.nextLine;</p>
<p class="p5">~mul = <span class="s8">EZSlider</span>(w, 900@25, <span class="s6">"Mul"</span>, <span class="s8">ControlSpec</span>(0.0, 1.0, <span class="s10">\lin</span>, 0.0),{~synth.set(<span class="s10">\mul</span>, ~mul.value)} ,1);</p>
<p class="p4"><br></p>
<p class="p5">~sf = <span class="s8">SoundFile</span>.new;</p>
<p class="p5">~sf.openRead(b.path);</p>
<p class="p4"><br></p>
<p class="p5"><span class="s8">SCStaticText</span>.new(w, <span class="s8">Rect</span>(0, 0, 60, 15)).font_(<span class="s8">Font</span>(<span class="s6">"Helvetica-Bold"</span>, 10)).string_(<span class="s6">" <span class="Apple-converted-space">          </span>"</span>); <span class="s9">// spacer</span></p>
<p class="p5"><span class="s8">SCStaticText</span>.new(w, <span class="s8">Rect</span>(0, 0, 300, 15))</p>
<p class="p7"><span class="s7"><span class="Apple-tab-span">	</span>.font_(</span><span class="s8">Font</span><span class="s7">(</span>"Helvetica-Bold"<span class="s7">, 10))</span></p>
<p class="p5"><span class="Apple-tab-span">	</span>.string_(~sf.path.basename);</p>
<p class="p4"><br></p>
<p class="p5">w.view.decorator.nextLine;</p>
<p class="p4"><br></p>
<p class="p5">~sfvs = <span class="s8">SCSoundFileView</span>.new(w, <span class="s8">Rect</span>(0, 0, 980, 80))</p>
<p class="p5"><span class="Apple-tab-span">	</span>.soundfile_(~sf)</p>
<p class="p5"><span class="Apple-tab-span">	</span>.readWithTask(0, ~sf.numFrames, 64)</p>
<p class="p5"><span class="Apple-tab-span">	</span>.elasticMode_(<span class="s8">true</span>)</p>
<p class="p5"><span class="Apple-tab-span">	</span>.timeCursorOn_(<span class="s8">true</span>)</p>
<p class="p5"><span class="Apple-tab-span">	</span>.timeCursorColor_(<span class="s8">Color</span>.red)</p>
<p class="p5"><span class="Apple-tab-span">	</span>.timeCursorPosition_(0)</p>
<p class="p5"><span class="Apple-tab-span">	</span>.drawsWaveForm_(<span class="s8">true</span>)</p>
<p class="p5"><span class="Apple-tab-span">	</span>.canFocus_(<span class="s8">false</span>)</p>
<p class="p5"><span class="Apple-tab-span">	</span>.gridOn_(<span class="s8">false</span>)</p>
<p class="p5"><span class="Apple-tab-span">	</span>.waveColors_(<span class="s8">Color</span>.new255(0, 0, 150) ! ~sf.numChannels)</p>
<p class="p5"><span class="Apple-tab-span">	</span>.background_(<span class="s8">HiliteGradient</span>(<span class="s8">Color</span>.new255(138, 43, 226), <span class="s8">Color</span>.new255(160, 80, 255), frac: 0.15))</p>
<p class="p5"><span class="Apple-tab-span">	</span>.mouseUpAction = {<span class="s8">|view|</span><span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s8">var</span> frame;</p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>frame = view.selectionStart(0);</p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>view.timeCursorPosition = view.selectionStart(0);<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>~group.notNil.if({ ~group.set(<span class="s10">\pos</span>, frame, <span class="s10">\t_trig</span>, 1) });</p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>~clock.string = (frame * ~srRecip).asTimeString;</p>
<p class="p5"><span class="Apple-tab-span">	</span>};</p>
<p class="p4"><br></p>
<p class="p5">w.view.decorator.nextLine;</p>
<p class="p5">w.front;</p>
<p class="p4"><br></p>
<p class="p5">~playFunc = {</p>
<p class="p8">// playback and update</p>
<p class="p5"><span class="s8">var</span> id = 0;</p>
<p class="p5">~resp = <span class="s8">OSCresponder</span>(s.addr,<span class="s10">'/tr'</span>,{ <span class="s8">arg</span> time,responder,msg;</p>
<p class="p5"><span class="Apple-tab-span">	</span>(msg[2] == id).if({<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>{</p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>~sfvs.timeCursorPosition = msg[3];<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>~clock.string = (msg[3] * ~srRecip).asTimeString;<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>}.defer;</p>
<p class="p5"><span class="Apple-tab-span">	</span>});</p>
<p class="p5">}).add;</p>
<p class="p5">w.onClose = {~resp.remove; ~synth.free;};</p>
<p class="p5"><span class="s8">CmdPeriod</span>.doOnce({~resp.remove; ~group = <span class="s8">nil</span>; ~synth = <span class="s8">nil</span>;});</p>
<p class="p4"><br></p>
<p class="p5">s.makeBundle(<span class="s8">nil</span>, {</p>
<p class="p5"><span class="s8">var</span> playa;</p>
<p class="p5">~group = <span class="s8">Group</span>.new;</p>
<p class="p5">~synth =<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="s8">SynthDef</span>(b.hash.asString, {<span class="s8">arg</span> mul = 1;</p>
<p class="p5"><span class="Apple-tab-span">	</span>playa = <span class="s5">DiskInSendIndex</span>.ar(1, b.bufnum, 20, id);</p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="s8">Out</span>.ar(0, playa * mul );</p>
<p class="p5">}).play(~group, [mul: ~mul.value]);</p>
<p class="p5">})</p>
<p class="p5">};</p>
<p class="p5">)</p>
</body>
</html>
